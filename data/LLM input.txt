帮我翻译如下Souffle规则到Ascent规则：
我会给你简单的例子
.decl isType(?t:Type)
.decl isReferenceType(?t:ReferenceType)
.decl isArrayType(?t:ArrayType)
.decl isClassType(?t:ClassType)
.decl isInterfaceType(?t:InterfaceType)
.decl DirectSuperclass(?class:ClassType, ?superclass:ClassType)

结果：

relation isType(String);
relation isReferenceType(String);
relation isArrayType(String);
relation isClassType(String);
relation isInterfaceType(String);
relation DirectSuperclass(String, String);

你需要处理的：
【注意你只需要处理.decl 其他你无需处理】
.decl DirectSuperinterface(?ref:ReferenceType, ?interface:InterfaceType)
.input DirectSuperinterface(IO="file", filename="DirectSuperinterface.facts", delimiter="\t")
.decl ApplicationClass(?ref:ReferenceType)
.decl MainClass(?class:ClassType)
.input MainClass(IO="file", filename="MainClass.facts", delimiter="\t")
.type Field
.decl Field_DeclaringType(?field:Field, ?declaringClass:ReferenceType)
.type MethodDescriptor
.type Method
.decl Method_DeclaringType(?method:Method, ?declaringType:ReferenceType)
.decl Method_ReturnType(?method:Method, ?returnType:Type)
.decl Method_SimpleName(?method:Method, ?simpleName:symbol)
.decl Method_Params(?method:Method, ?params:symbol)
.decl Method_Descriptor(?method:Method, ?descriptor:MethodDescriptor)
.decl Method_Modifier(?mod:Modifier, ?method:Method)
.input Method_Modifier(IO="file", filename="Method-Modifier.facts", delimiter="\t")

